/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'product-design': ProductDesign;
    'other-projects': OtherProject;
    'product-files': ProductFile;
    links: Link;
    users: User;
    media: Media;
    docs: Doc;
    lists: List;
    labels: Label;
    'pb-artifact-categories': PbArtifactCategory;
    'pb-artifact-tags': PbArtifactTag;
    'open-source-documents': OpenSourceDocument;
    redirects: Redirect;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    links: {
      usedInOpenSourceDocuments: 'open-source-documents';
    };
    docs: {
      usedInOpenSourceDocuments: 'open-source-documents';
    };
    'pb-artifact-categories': {
      usedInOpenSourceDocuments: 'open-source-documents';
    };
    'pb-artifact-tags': {
      usedInOpenSourceDocuments: 'open-source-documents';
    };
  };
  collectionsSelect: {
    'product-design': ProductDesignSelect<false> | ProductDesignSelect<true>;
    'other-projects': OtherProjectsSelect<false> | OtherProjectsSelect<true>;
    'product-files': ProductFilesSelect<false> | ProductFilesSelect<true>;
    links: LinksSelect<false> | LinksSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    docs: DocsSelect<false> | DocsSelect<true>;
    lists: ListsSelect<false> | ListsSelect<true>;
    labels: LabelsSelect<false> | LabelsSelect<true>;
    'pb-artifact-categories': PbArtifactCategoriesSelect<false> | PbArtifactCategoriesSelect<true>;
    'pb-artifact-tags': PbArtifactTagsSelect<false> | PbArtifactTagsSelect<true>;
    'open-source-documents': OpenSourceDocumentsSelect<false> | OpenSourceDocumentsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    siteSettings: SiteSetting;
    siteDistractions: SiteDistraction;
    siteSocialLinks: SiteSocialLink;
  };
  globalsSelect: {
    siteSettings: SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    siteDistractions: SiteDistractionsSelect<false> | SiteDistractionsSelect<true>;
    siteSocialLinks: SiteSocialLinksSelect<false> | SiteSocialLinksSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword:
    | {
        email: string;
      }
    | {
        username: string;
      };
  login:
    | {
        email: string;
        password: string;
      }
    | {
        password: string;
        username: string;
      };
  registerFirstUser: {
    password: string;
    username: string;
    email: string;
  };
  unlock:
    | {
        email: string;
      }
    | {
        username: string;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-design".
 */
export interface ProductDesign {
  id: number;
  title: string;
  image: number | Media;
  description?: string | null;
  details?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  enableExtraImages?: boolean | null;
  enableWrittenContent?: boolean | null;
  extraImages?: (number | Media)[] | null;
  extraRichTextContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  visibility?: {
    'visibility-home'?: boolean | null;
    'visibility-collection-page'?: boolean | null;
  };
  /**
   * Pinned items appear first on the main page.
   */
  pinned?: boolean | null;
  /**
   * Mark this list as a favorite.
   */
  favorited?: boolean | null;
  enableMakerworld?: boolean | null;
  enableDownload?: boolean | null;
  enablePurchase?: boolean | null;
  makerWorldLink?: string | null;
  /**
   * Select a file from the Product Files collection
   */
  downloadLink?: (number | null) | ProductFile;
  purchaseLink?: string | null;
  /**
   * Automatically assigned to the "Product Design" type.
   */
  projectType?: (number | null) | Label;
  datePublished?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * URL-friendly version of the title (auto-generated if left blank)
   */
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Collection for all uploaded images, videos, and documents.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  /**
   * Automatically determined based on the uploaded file.
   */
  fileType?: ('image' | 'video' | 'document' | 'general') | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  /**
   * The original name of the uploaded file, formatted for safety.
   */
  filename: string;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Downloadable files for products
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-files".
 */
export interface ProductFile {
  id: number;
  name: string;
  fileDescription?: string | null;
  /**
   * Size of the file in kilobytes
   */
  fileSize?: number | null;
  /**
   * Type of file being uploaded
   */
  fileType?: ('stl' | 'gltf' | 'glb' | 'zip' | 'other') | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Manage category labels.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "labels".
 */
export interface Label {
  id: number;
  name: string;
  /**
   * A human-readable name for this color scheme (e.g., "Primary Blue").
   */
  colorLabelName?: string | null;
  /**
   * Select the background color for labels/tags.
   */
  bgColor: string;
  /**
   * Select the text color for labels/tags (ensure contrast with background).
   */
  textColor?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "other-projects".
 */
export interface OtherProject {
  id: number;
  title: string;
  image?: (number | null) | Media;
  description?: string | null;
  details?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  enableExtraImages?: boolean | null;
  enableWrittenContent?: boolean | null;
  extraImages?: (number | Media)[] | null;
  extraRichTextContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  visibility?: {
    'visibility-home'?: boolean | null;
    'visibility-collection-page'?: boolean | null;
  };
  projectLabel: number | Label;
  pinned?: boolean | null;
  /**
   * Mark this list as a favorite.
   */
  favorited?: boolean | null;
  /**
   * Link to the project (GitHub, etc.)
   */
  projectLink?: string | null;
  dateCompleted?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * URL-friendly version of the title (auto-generated if left blank)
   */
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Manage links.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links".
 */
export interface Link {
  id: number;
  title: string;
  /**
   * The URL of the link.
   */
  url: string;
  /**
   * Shows which Open Source Documents use this link.
   */
  usedInOpenSourceDocuments?: {
    docs?: (number | OpenSourceDocument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * A collection of open-source documents, templates, and artifacts left over from Pixel Bakery.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-source-documents".
 */
export interface OpenSourceDocument {
  id: number;
  '_open-source-documents_usedInOpenSourceDocuments_order'?: string;
  title: string;
  publishedDate: string;
  /**
   * Categorize the document for easier filtering.
   */
  'pb-artifact-category'?: (number | null) | PbArtifactCategory;
  /**
   * Tag the document for easier filtering.
   */
  'pb-artifact-tag'?: (number | PbArtifactTag)[] | null;
  /**
   * A brief summary of what this document/resource is about.
   */
  shortDescription?: string | null;
  resourceType?: ('file' | 'link') | null;
  /**
   * Upload the document file (e.g., PDF, DOCX, template).
   */
  documentFile?: (number | null) | Doc;
  /**
   * Provide a link to the document (e.g., Google Drive, Dropbox).
   */
  documentLink?: (number | null) | Link;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Manage categories for open source documents.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pb-artifact-categories".
 */
export interface PbArtifactCategory {
  id: number;
  name: string;
  /**
   * Shows which Open Source Documents use this category.
   */
  usedInOpenSourceDocuments?: {
    docs?: (number | OpenSourceDocument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage tags for open source documents.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pb-artifact-tags".
 */
export interface PbArtifactTag {
  id: number;
  name: string;
  /**
   * Shows which Open Source Documents use this tag.
   */
  usedInOpenSourceDocuments?: {
    docs?: (number | OpenSourceDocument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Collection for all uploaded documents.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "docs".
 */
export interface Doc {
  id: number;
  /**
   * A human-readable title for the document. Defaults to a formatted filename.
   */
  title?: string | null;
  /**
   * Shows which Open Source Documents use this document.
   */
  usedInOpenSourceDocuments?: {
    docs?: (number | OpenSourceDocument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  /**
   * The original name of the uploaded file.
   */
  filename: string;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  username: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lists".
 */
export interface List {
  id: number;
  /**
   * Optional: An emoji to display as an icon.
   */
  emoji?: string | null;
  title: string;
  subheader?: string | null;
  things?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content?: {};
  publishedAt?: string | null;
  images?: (number | null) | Media;
  /**
   * Pinned lists may be displayed more prominently.
   */
  pinned?: boolean | null;
  /**
   * Mark this list as a favorite.
   */
  favorited?: boolean | null;
  visibility?: {
    'visibility-home'?: boolean | null;
    'visibility-collection-page'?: boolean | null;
  };
  /**
   * Automatically assigned to the "List" project type.
   */
  projectType?: (number | null) | Label;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'product-design';
          value: number | ProductDesign;
        } | null)
      | ({
          relationTo: 'lists';
          value: number | List;
        } | null)
      | ({
          relationTo: 'other-projects';
          value: number | OtherProject;
        } | null);
    url?: string | null;
  };
  type: '301' | '302';
  customField?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'product-design';
        value: number | ProductDesign;
      } | null)
    | ({
        relationTo: 'other-projects';
        value: number | OtherProject;
      } | null)
    | ({
        relationTo: 'product-files';
        value: number | ProductFile;
      } | null)
    | ({
        relationTo: 'links';
        value: number | Link;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'docs';
        value: number | Doc;
      } | null)
    | ({
        relationTo: 'lists';
        value: number | List;
      } | null)
    | ({
        relationTo: 'labels';
        value: number | Label;
      } | null)
    | ({
        relationTo: 'pb-artifact-categories';
        value: number | PbArtifactCategory;
      } | null)
    | ({
        relationTo: 'pb-artifact-tags';
        value: number | PbArtifactTag;
      } | null)
    | ({
        relationTo: 'open-source-documents';
        value: number | OpenSourceDocument;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-design_select".
 */
export interface ProductDesignSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  description?: T;
  details?: T;
  enableExtraImages?: T;
  enableWrittenContent?: T;
  extraImages?: T;
  extraRichTextContent?: T;
  visibility?:
    | T
    | {
        'visibility-home'?: T;
        'visibility-collection-page'?: T;
      };
  pinned?: T;
  favorited?: T;
  enableMakerworld?: T;
  enableDownload?: T;
  enablePurchase?: T;
  makerWorldLink?: T;
  downloadLink?: T;
  purchaseLink?: T;
  projectType?: T;
  datePublished?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "other-projects_select".
 */
export interface OtherProjectsSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  description?: T;
  details?: T;
  enableExtraImages?: T;
  enableWrittenContent?: T;
  extraImages?: T;
  extraRichTextContent?: T;
  visibility?:
    | T
    | {
        'visibility-home'?: T;
        'visibility-collection-page'?: T;
      };
  projectLabel?: T;
  pinned?: T;
  favorited?: T;
  projectLink?: T;
  dateCompleted?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-files_select".
 */
export interface ProductFilesSelect<T extends boolean = true> {
  name?: T;
  fileDescription?: T;
  fileSize?: T;
  fileType?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links_select".
 */
export interface LinksSelect<T extends boolean = true> {
  title?: T;
  url?: T;
  usedInOpenSourceDocuments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  username?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  fileType?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "docs_select".
 */
export interface DocsSelect<T extends boolean = true> {
  title?: T;
  usedInOpenSourceDocuments?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lists_select".
 */
export interface ListsSelect<T extends boolean = true> {
  emoji?: T;
  title?: T;
  subheader?: T;
  things?: T;
  content?: T | {};
  publishedAt?: T;
  images?: T;
  pinned?: T;
  favorited?: T;
  visibility?:
    | T
    | {
        'visibility-home'?: T;
        'visibility-collection-page'?: T;
      };
  projectType?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "labels_select".
 */
export interface LabelsSelect<T extends boolean = true> {
  name?: T;
  colorLabelName?: T;
  bgColor?: T;
  textColor?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pb-artifact-categories_select".
 */
export interface PbArtifactCategoriesSelect<T extends boolean = true> {
  name?: T;
  usedInOpenSourceDocuments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pb-artifact-tags_select".
 */
export interface PbArtifactTagsSelect<T extends boolean = true> {
  name?: T;
  usedInOpenSourceDocuments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-source-documents_select".
 */
export interface OpenSourceDocumentsSelect<T extends boolean = true> {
  '_open-source-documents_usedInOpenSourceDocuments_order'?: T;
  title?: T;
  publishedDate?: T;
  'pb-artifact-category'?: T;
  'pb-artifact-tag'?: T;
  shortDescription?: T;
  resourceType?: T;
  documentFile?: T;
  documentLink?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  type?: T;
  customField?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings".
 */
export interface SiteSetting {
  id: number;
  maintenanceMode?: boolean | null;
  showPixelBakery?: boolean | null;
  showProductDesigns?: boolean | null;
  showOtherProjects?: boolean | null;
  showLists?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteDistractions".
 */
export interface SiteDistraction {
  id: number;
  /**
   * Manage the list of current distractions. Items can be reordered by dragging.
   */
  distractionItems?:
    | {
        active: boolean;
        /**
         * Example: 🐳, ⚛️, 🐈
         */
        icon?: string | null;
        text: string;
        photoLinks?:
          | {
              linkText: string;
              /**
               * The filename of the image (e.g., my-cat.jpg). Images should be placed in the public/images/ folder.
               */
              imageFilename: string;
              caption: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSocialLinks".
 */
export interface SiteSocialLink {
  id: number;
  /**
   * Manage the list of current social links. Items can be reordered by dragging.
   */
  socialLinks?:
    | {
        title: string;
        url: string;
        active: boolean;
        targetBlank: boolean;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  maintenanceMode?: T;
  showPixelBakery?: T;
  showProductDesigns?: T;
  showOtherProjects?: T;
  showLists?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteDistractions_select".
 */
export interface SiteDistractionsSelect<T extends boolean = true> {
  distractionItems?:
    | T
    | {
        active?: T;
        icon?: T;
        text?: T;
        photoLinks?:
          | T
          | {
              linkText?: T;
              imageFilename?: T;
              caption?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSocialLinks_select".
 */
export interface SiteSocialLinksSelect<T extends boolean = true> {
  socialLinks?:
    | T
    | {
        title?: T;
        url?: T;
        active?: T;
        targetBlank?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}